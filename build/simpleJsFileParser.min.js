!function(){return function e(t,r,n){function s(i,l){if(!r[i]){if(!t[i]){var a="function"==typeof require&&require;if(!l&&a)return a(i,!0);if(o)return o(i,!0);var u=new Error("Cannot find module '"+i+"'");throw u.code="MODULE_NOT_FOUND",u}var c=r[i]={exports:{}};t[i][0].call(c.exports,function(e){return s(t[i][1][e]||e)},c,c.exports,e,t,r,n)}return r[i].exports}for(var o="function"==typeof require&&require,i=0;i<n.length;i++)s(n[i]);return s}}()({1:[function(e,t,r){Utils=e("./utils"),JsonExtractor=e("./jsonExtractor"),t.exports={Utils:Utils,JsonExtractor:JsonExtractor}},{"./jsonExtractor":2,"./utils":3}],2:[function(e,t,r){r.join=function(e,t,r,n){let s=[];return e.forEach(e=>{t.forEach(t=>{e[r]==t[n]&&s.push($.extend(e,t))})}),s},r.where=function(e,t){return console.log("in where ..",t),e.filter(e=>{let r=!0;return t.forEach(t=>{let n=!1,s=t[1],o=t[0],i=t[2];switch(s){case"=":n=e[o]==i}r=r&&n}),r})},r.project=function(e,t=[]){return e.map(e=>{let r={};return t.forEach(t=>{t in e&&(r[t]=e[t])}),r})},r.splitBy=function(e,t){let r=[],n=[];return e.forEach((s,o)=>{let i=s[t];n.includes(i)||(r.push({key:i,record:e.filter(e=>e[t]==i)}),n.push(i))}),console.log(`groupedValues : ${n}`),r},r.orderBy=function(e=[{}],t,r=1){let n=Object.keys(e[0]);if(n.includes(t))return e.sort((e,n)=>r*(e[t]-n[t]));throw new Error(`orderBy : unknown field : ${t} in ${n}`)}},{}],3:[function(e,t,r){r.loadFromFile=function(e){return new Promise((t,r)=>{var n=new FileReader;n.readAsText(e),n.onload=function(e){t(e.target.result)},n.onerror=function(e){r(e)}})},r.extractPattern=function(e,t){return[]}},{}],4:[function(e,t,r){const{EmlMetaParser:n}=e("../_entity/EmlMetaParser");t.exports=class{constructor(){this.sets={}}hasSet(e){return Array.isArray(this.sets[e])}async addFromFiles(e,t){console.log(`destination is .. ${t}`);let r=Array.from(e).map(e=>n.loadFromFile(e)),s=await Promise.all(r);return this.appendToSet(s,t),console.log(this.sets),this.sets[t]}appendToSet(e,t){console.log(`data ${e} isArray ? ${Array.isArray(this.sets[t])}`),this.hasSet(t)||(this.sets[t]=[]),console.log(`isArray2 ? ${Array.isArray(this.sets[t])}`),this.sets[t]=this.sets[t].concat(e)}}},{"../_entity/EmlMetaParser":5}],5:[function(e,t,r){const{project:n,where:s}=e("../../_helpers/jsonExtractor"),o=e("../../_helpers/utils");class i{static async loadFromFile(e){let t=await o.loadFromFile(e);return new i(t)}constructor(e){e=JSON.parse(e),Object.keys(e).forEach(t=>{this[t]=e[t]}),this.subject=e.subject,this.content=e.content,this.sender=e.sender,console.log("This is a new _EmlMetaJSON"),console.log("Built object",this._EmlMetaJSON)}parseDelay(){let e=o.extractPattern(this.metadata,"<TPS_([^>])+>");return e.length>0?e[0].split("_")[0]:null}get Sender(){return this.sender}get Content(){return this.metadata}get Subject(){return this.subject}get delay(){return this.delay}getKeys(e){return Object.keys(this)}toString(){return JSON.stringify(this._EmlMetaJSON,null,"\t")}}r.EmlMetaParser=i},{"../../_helpers/jsonExtractor":2,"../../_helpers/utils":3}],6:[function(e,t,r){EmlMetaBundle=e("./_models/_bundle/EmlMetaBundle"),_Helpers=e("./_helpers/"),t.exports={EmlMetaBundle:EmlMetaBundle,_Helpers:_Helpers}},{"./_helpers/":1,"./_models/_bundle/EmlMetaBundle":4}]},{},[6]);